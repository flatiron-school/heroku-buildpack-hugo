#!/bin/sh
# bin/compile <build-dir> <cache-dir> <env-dir>
set -e

# Used to format the output based on heroku guidelines
# https://devcenter.heroku.com/articles/buildpack-api#style
indent() {
	RE="s/^/       /"
	sed $SED_FLAG "$RE"
}

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

# Default Hugo version
DEFAULT_HUGO_VERSION="0.52"

# attempt to extract the HUGO_VERSION parameter form the Heroku configuration vars, fall back to the default version if unavailable
if [ -d "$ENV_DIR" -a -e "$ENV_DIR/HUGO_VERSION" ]; then
	export HUGO_VERSION=$(cat "$ENV_DIR/HUGO_VERSION")
else
	echo "\n-----> HUGO VERSION not defined, using $DEFAULT_HUGO_VERSION."
	export HUGO_VERSION=$DEFAULT_HUGO_VERSION
fi

# Hugo URL ( download from GH builds )
RELEASE_NAME=hugo_${HUGO_VERSION}_Linux-64bit
FILE_NAME=${RELEASE_NAME}.tar.gz
HUGO_PACKAGE=https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/${FILE_NAME}

# Store the hugo package in the cache_dir ( persistent across builds )
mkdir -p $CACHE_DIR
if ! [ -e $CACHE_DIR/$FILE_NAME ]; then
	echo "\n-----> Fetching Hugo ${HUGO_VERSION} binaries at ${HUGO_PACKAGE}"
	curl $HUGO_PACKAGE -L -s -o $CACHE_DIR/$FILE_NAME | indent
else
	echo "\n-----> Hugo ${HUGO_VERSION} binaries already at ${HUGO_PACKAGE}"
fi

# Extract the binary in the working directory
echo "\n-----> Extracting Hugo ${HUGO_VERSION} binaries to ${BUILD_DIR}"
mkdir -p $CACHE_DIR/$RELEASE_NAME | indent
tar -zxvf $CACHE_DIR/$FILE_NAME -C $CACHE_DIR | indent

echo "\n-----> Hugo version is: "
$CACHE_DIR/hugo version | indent

echo "\n-----> Getting the theme"
THEME_URL="$(cat $BUILD_DIR/hugo/.hugotheme)"
rm -rf $BUILD_DIR/themes && mkdir $BUILD_DIR/themes && cd $BUILD_DIR/themes
git clone $THEME_URL school-docdock
echo "\n"

cd $BUILD_DIR
mkdir -p static | indent

echo "\n-----> Creating content folder"
mkdir -p content | indent
# mv $BUILD_DIR/assets $BUILD_DIR/content/ | indent
# mv $BUILD_DIR/fasttrack $BUILD_DIR/content/ | indent
# mv $BUILD_DIR/immersive $BUILD_DIR/content/ | indent
# mv $BUILD_DIR/lessons $BUILD_DIR/content/ | indent
# mv $BUILD_DIR/teacher-training $BUILD_DIR/content/ | indent
# mv $BUILD_DIR/_index.md $BUILD_DIR/content/ | indent
# mv $BUILD_DIR/hugo/prod-config.toml $BUILD_DIR/config.toml | indent
# mv $BUILD_DIR/hugo/server.js $BUILD_DIR/server.js | indent

. $BUILD_DIR/hugo/copy.sh

# Build the site
echo "\n-----> Building the site"
$CACHE_DIR/hugo | indent
